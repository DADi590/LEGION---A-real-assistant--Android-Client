Missing to put the assistant asking the permissions in case it wants to execute something that needs the permission and
doesn't have it. This also means which is to remove all permissions periodically and see if the asistant asks them and
doesn't crash if it doesn't have them.

------------------------------------------------------------------------------------------------------------------------

Missing making the alarm system...

------------------------------------------------------------------------------------------------------------------------

onEndOfSpeech is always called. onError and onResults are nto. How to know when the recognition finished completely? -
StackOverflow

Maybe try to put a flag variable to know if the recogniztion ended here on Main Service and equal startListening to a
variable.
See if it remains waiting. If it does, it's put in something asynchronous. If not, see below. In last case,
StackOverflow...

TRY TO SEE FIRST IF THE ---TOTAL--- RECOGNITION WITH POCKETSPHINX IS GOOD ENOUGH!!!!!!

EDIT: not that good idea, but I used a Thread to count 6 seconds since onEndOfSpeech's call - read the explanation on
the reposicao_reconhecimento_google_erro Thread.

PUT POCKETSPHINX AND KALDI'S FILES PROTECTED IN A SYSTEM FORLDER OR SOMETHING LIKE THAT SO IT'S NOT POSSIBLE TO DELETE
THEM!!!!!

------------------------------------------------------------------------------------------------------------------------

Test all the call receiver... I don't kno if it's well implemented or not (calls_state was wrong, I think)

------------------------------------------------------------------------------------------------------------------------

Stop the phone from charging when it gets to 80% and get back to charge on 79%

PUT THE APP RESETING THE NORMAL CHARGING BEFORE THE PHONE SHUTS DOWN ---OR THE APP IS UNINSTALLED--- OR IT'S DEAETH!!!!!

------------------------------------------------------------------------------------------------------------------------

Detect the app uninstalltion

https://stackoverflow.com/questions/18692571/how-can-an-app-detect-that-its-going-to-be-uninstalled

------------------------------------------------------------------------------------------------------------------------

Dangerous commands, like forcing the phone unlock or format or something like that, only with explicit confirmation from
the user, requested from the app and with the user on camera and digital print too, since it doesn't seem to be possible
to recognize a specific voice (though, even still - put the other 2 on this).

------------------------------------------------------------------------------------------------------------------------

Put AudioRecorder on a separate processes and the Main Service too, in order to, in case there's some error on Main
Service, AudioRecorder will still be recording. Important things should be put in separate processes. The Protected
LockScreen is another example. The Speech module maybe too. What was left would stay in Main Service's process.

------------------------------------------------------------------------------------------------------------------------

Change the USB mode automatically to what's wanted as default, in case it's not possible to put some default option on
the phone (like on BV9500). See here:
https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/hardware/usb/UsbManager.java,
a função setCurrentFunctions().

Maybe a bad idea, because then anyone can access the phone files. Think about that. In any case, do this for PLS to put
the phone in charging mode every as-soon-as-possible.

------------------------------------------------------------------------------------------------------------------------

Se you enable Safe Boot, the app won't turn on... Isn't it supposed to start? Direct Boot Aware...? Fix that.

PS: LOCKED_BOOT_COMPLETE appears when the phone starts and hasn't been unlocked. With Safe Boot, we can't have Debug
Mode active, so no idea if also sent there or not. If it is, there's some other problem. If not, there's the problem,
possibly.

------------------------------------------------------------------------------------------------------------------------

Think about putting root commands for everything or almost everything. If the app is not as a system app, it won't do
various things. Imagine someone removes it from being a system app. The app has root access, but it won't do anything
with it. Unless it puts itself in the system folders. An external app doing it or itself would copy itself to system
folders and when it would start as system app again, it would delete the old file (if it's even possible to do this).
Think about it.

------------------------------------------------------------------------------------------------------------------------

If the speech is interrupted and the text is big (bigger than no idea how many words), use onRangeStart() on
UtteranceProgressListener to know where he was when he stopped speaking. Better than starting all over again.

See this: https://stackoverflow.com/questions/59488998/highlighting-the-text-while-speech-is-progressing.

See also this commend from one of the answers of the thread above, which indicates that there might be a problem with
that function
https://stackoverflow.com/questions/59488998/highlighting-the-text-while-speech-is-progressing#comment114982028_59493228
If it's true (or anyways), remove all line breaks from the speech string as soon as the function receives it.

------------------------------------------------------------------------------------------------------------------------

Still about the Speech module, come here: https://developer.android.com/reference/android/speech/tts/TextToSpeech, here:
https://developer.android.com/reference/android/speech/tts/UtteranceProgressListener, and here:
https://developer.android.com/reference/android/speech/tts/Voice, and see all functions that might be useful --> there
 are some. Check them all.

------------------------------------------------------------------------------------------------------------------------

See this about checking the APK signature in an external library:
https://stackoverflow.com/questions/30650006/ndk-application-signature-check

------------------------------------------------------------------------------------------------------------------------

Put the Speech module saying everything it didn't say while the phone was not in Normal ringer mode. Else, those said
things will be lost. A listener or a thread with a while or something like that. In case it's a while, enable the while
only after the first time that a speech is not spoken because of the ringer mode. Disable the thread as soon as the
while detects the Normal mode.

------------------------------------------------------------------------------------------------------------------------

Good morning sir. It's 23 ºC and it's a cloudy morning/afternoon/night. It will be hot today. It's not raining.

------------------------------------------------------------------------------------------------------------------------

If you didn't fix that (probably not), try to put the phone's Audio Recorder recording, and then the assistant. He'll
say "Error 3 sir." twice. It's possible that it's related with asynchronous tasks. The "Starting now, sir." speech is
put to be spoken from the Runnable to enable to recording. This is the created thread in onDone's callback - haven't him
yet deleted "Starting now, sir." from the speeches list, he's already enabling the audio recording. But the error comes,
and that's put on the list before the other one leaves, or something like that. Don't know what happens in that case.
So as this becomes a mess, it's to put broadcasts on this thing.

As soon as it gets to a callback of speak(), that callback won't call any code. It sends a broadcast (or something
better) to the main thread to execute that. Don't even know if the broadcast is then on the main thread, but ok. Find
some way of putting the code being executed on the main thread or on which the Speech or the Main Service are being
executed and not in a new one created by speak(), or this will only be threads and threads and when there are Runnables
involved, it becomes a mess.

See that of AIDL or something better than sending a broadcast, for example, no idea.

Maybe in last resort, you could start a service with an input which was the Runnable you wanted to execute, and that
service would call the Speech again, for example. But no idea if it's a greate idea. Doesn't fix the part where all
that's not from the Speech, being on the main thread. It's just an idea.

------------------------------------------------------------------------------------------------------------------------

For emergencies, any message started by "emergency" coming from trusted numbers, give the alert, even in middle of
meetings, classes and stuff (Critical priority then).

------------------------------------------------------------------------------------------------------------------------

If you turn the assistant's volume down while he's speaking, he won't change it until all speeches on lists are
finished. What if he starts speaking right after having stopped for some reason...? Put a timer. Only if after a time
the assistant can change the volume again in the beginning of a new set of speeches.

------------------------------------------------------------------------------------------------------------------------

If I put the volume low before speaking so it's not heard very much, he won't care. Put a waiting time on that.

------------------------------------------------------------------------------------------------------------------------

"Carl is sleeping, speak lower / be quiet" --> Then he memorizes that Carl is sleeping and only when I tell him Carl is
has awake, the assistant will get back to normal volume or gets back speaking.

------------------------------------------------------------------------------------------------------------------------

Test if you can stop the app with Debugging enabled through ADB or something, specially with the PLS enabled.

------------------------------------------------------------------------------------------------------------------------

Get the app connecting to ANY open Wi-Fi networks while the Anti-Theft is enabled. Check the connection. Doesn't work,
next network (there are the networks which require signing in, so next to one that doesn't).

------------------------------------------------------------------------------------------------------------------------

Take a look at PACKAGE_VERIFICATION_AGENT ;-) --> seems to transform the app in a Verifier app... Grant runtime
permissions...?
Also take a look at BIND_PACKAGE_VERIFIER.
GRANT_RUNTIME_PERMISSIONS has "verifier" protection level since only Marshmallow MR1. The first release doesn't have
verifier in the protection level. So try to get the app as an "installer" instead.

There's another one interesting too: USE_INSTALLER_V2.

Actually... Just root the BV9500 and test if by just installing the app as a system app it becomes an Installer. If not,
try to add the PACKAGE_VERIFICAR_AGENT permission. If it's not a Verifier still, try to put the BIND_PACKAGE_VERIFIER
where the INCOMING_EXT_COMMS is. If still not, try to add USE_INSTALLER_V2 to see if it does anything (probably not,
since it's only granted to Signature or Verifier apps).

------------------------------------------------------------------------------------------------------------------------

Put the function that handles exceptions of the entire app logging them to some file or whatever and update the function
documentation to say what it does exactly.

------------------------------------------------------------------------------------------------------------------------

If it's for the app to be persistent, then the app itself must have a way of restarting internally, since from outside
it can't - unless it's some other system app that orders so through forceStopPackage() -, because it's not being able to
update... (Android Studio can't kill it, as a start.)

------------------------------------------------------------------------------------------------------------------------

The system overlay of the PLS is not working on BV9500.... Why....?

------------------------------------------------------------------------------------------------------------------------

Make a boot and shut down animation for the assistant and make it being always checking if it's there (SHA-something?).
Make have an initial part, the loop, and then a final part.

Make also one for the shut down. A very fast one. Something.

------------------------------------------------------------------------------------------------------------------------

Make the assistant have a unique voice. Like, it uses only Brian internally and nothing else can use the voice, for
example. Find out how to do that.

------------------------------------------------------------------------------------------------------------------------

When someone calls that it's not on the contacts, use some web service to check who might be/is calling.
Like some hospital or other public numbers.

At least get the country from the number, and maybe the region a telephone number is from
(like +351 248 ... ... is from a region or city or something, and 254 is from somewhere else).

------------------------------------------------------------------------------------------------------------------------

[Someone calls] / "He's not available at the moment" / "When will he be available then?"
/ "When will you be available, sir?" / "In 2 hours" / "He'll be available i 2 hours"

Or...

"Are you not answering the call? Would you like me to say something?"
/ "Yes. I'm washing my teeth now, can't answer" / [And the assistant
would say that, either on ca or SMS message]

------------------------------------------------------------------------------------------------------------------------

Have a list of all bought food, store the validity of the food, and keep warning if it's going to pass or not. Like, a
few days before it ends.

------------------------------------------------------------------------------------------------------------------------

Block phone numbers.
