/*
 * Copyright 2021 DADi590
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
	id 'com.android.application'
}

final JavaVersion APP_JAVA_VERSION = JavaVersion.VERSION_1_8
if (JavaVersion.current() != APP_JAVA_VERSION) {
	// Remove this when Gradle on Android has the --release parameter available... It doesn't on 2021-09-01.
	throw new GradleException("ERROR: This project requires JDK " + APP_JAVA_VERSION + ", but it's being compiled " +
			"with JDK " + JavaVersion.current() + ". Please use the AdoptOpenJDK (OpenJ9) 1.8.0_282.")
	// Do NOT attempt to compile with a different JDK version than the set above until this happens and the release
	// parameter is set on this file. More about the why: https://stackoverflow.com/questions/43102787
}

android {
	signingConfigs {
		release {
			// When compiling the project, it uses the release mode, not the debug one, so this is used to automatically
			// sign the APK when compiling and installing the APK on the phone with the Run button.
			final def propsFile = rootProject.file('PERSONAL_FILES_EOG\\signing_assist_c_a.SECRET')
			final def props = new Properties()

			props.load(new FileInputStream(propsFile))
			storeFile = file(props["storeFilePath"])
			storePassword = props["storePassword"]
			keyAlias = props["keyAlias"]
			keyPassword = props["keyPassword"]
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/*

	The minimum version will be kept on API 15 in case there's some emergency and it's needed to use on an old phone and
	that way at least the minimum can be used, hopefully.

	The target version will be kept at 23, since that may unlock security limitations imposed if the target SDK is newer,
	like as of API 28, some internal/hidden classes and methods can no longer be used.
	Change it to a newer one to test with Play Store standards only.
	Do NOT put it below API 23, or the app will not be able to check/request run-time permissions!

	Versions for which the app was developed (developing to a version implies testing on that version):
		- KitKat 4.4.2, API 19 (tablet) --> until [still on it]
		- Lollipop 5.1, API 22 (phone) --> until [still on it]
		- Oreo 8.1, API 27 (phone) --> until [still on it]

	*/
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	compileSdkVersion 29
	buildToolsVersion "30.0.3"

	defaultConfig {
		applicationId "com.dadi590.assist_c_a"
		//noinspection MinSdkTooLow
		minSdkVersion 15
		//noinspection ExpiredTargetSdkVersion
		targetSdkVersion 23
		versionCode 1
		versionName "for development" // "version for development" will appear in Settings xD (at least in English...)

		signingConfig signingConfigs.release

		multiDexEnabled true
	}

	compileOptions {
		sourceCompatibility APP_JAVA_VERSION
		targetCompatibility APP_JAVA_VERSION
	}

	buildTypes {
		debug {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	lintOptions {
		checkDependencies true
	}
}

dependencies {
	// General
	implementation "androidx.appcompat:appcompat:1.3.1"
	implementation "androidx.constraintlayout:constraintlayout:2.1.0"
	implementation "androidx.multidex:multidex:2.0.1"

	// Navigation
	implementation "androidx.navigation:navigation-fragment:2.3.5"
	implementation "androidx.navigation:navigation-ui:2.3.5"

	// External
	implementation "org.gavaghan:geodesy:1.1.3"
}
